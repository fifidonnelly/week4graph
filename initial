import matplotlib.pyplot as plt

def dfs(graph, start, end, visited, path):
    visited[start] = True
    path.append(start)
    
    if start == end:
        return True
    
    for neighbor in graph[start]:
        if not visited[neighbor]:
            if dfs(graph, neighbor, end, visited, path):
                return True
    
    path.pop()
    return False

def visualize_graph(graph, path=None):
    plt.figure(figsize=(8, 6))
    pos = {node: (i, 0) for i, node in enumerate(graph.keys())}
    
    for node in graph:
        plt.scatter(pos[node][0], pos[node][1], color='blue', s=500, zorder=2)
        plt.text(pos[node][0], pos[node][1] + 0.1, node, ha='center', va='center', fontsize=12, zorder=3)
        for neighbor in graph[node]:
            plt.plot([pos[node][0], pos[neighbor][0]], [pos[node][1], pos[neighbor][1]], color='gray', zorder=1)
    
    if path:
        for i in range(len(path) - 1):
            plt.plot([pos[path[i]][0], pos[path[i+1]][0]], [pos[path[i]][1], pos[path[i+1]][1]], color='red', linewidth=2)
    
    plt.axis('off')
    plt.show()

if __name__ == "__main__":
    graph = {
        "A": ["B", "D"], }
       
